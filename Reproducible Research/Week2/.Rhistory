levels(data1$X.1)[data1$X.1]
data1 <- rename(data1, CountryCode=X,  Ranking=X.1)
data1$Ranking <- as.numeric(levels(data1$X.1)[data1$X.1])
View(data1)
data1$Ranking <- as.numeric(levels(data1$Ranking))[data1$Ranking]
View(data1)
fileurl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv'
data2 <- read.csv(fileurl, header=TRUE, sep=",")
data2$Region <- as.character(data2$Region)
data2 <- data2 %>% filter(data2$Region != '') %>% select("CountryCode","Long.Name")
temp <- merge(data1, data2, by.x="X", by.y="CountryCode", all=FALSE) %>%
arrange(desc(Ranking))
temp[13,'Long.Name']
temp <- merge(data1, data2, by.x="X", by.y="CountryCode", all=FALSE) %>%
arrange(desc(Ranking))
temp <- merge(data1, data2, by.x="CountryCode", by.y="CountryCode", all=FALSE) %>%
arrange(desc(Ranking))
temp[13,'Long.Name']
View(temp)
View(data2)
fileurl <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv'
data2 <- read.csv(fileurl, header=TRUE, sep=",")
data2$Region <- as.character(data2$Region)
data2 <- data2 %>% filter(data2$Region != '')
temp <- merge(data1, data2, by.x="CountryCode", by.y="CountryCode", all=FALSE) %>%
arrange(desc(Ranking))
View(data2)
names(data2)
a <- group_by(temp,"Income.Group")
a
View(a)
summarize(a,mean(Ranking))
a <- temp %>%
group_by("Income.Group") %>%
summarize(mean(Ranking))
View(a)
a <- temp %>%
group_by(Income.Group) %>%
summarize(mean(Ranking))
View(a)
quantile(temp$Ranking, probs=seq(0,0.2,0.4,0.6,0.8))
quantile(temp, seq(0,1,0.2))
quantile(temp, seq(0,1,0.2), na.rm=TRUE)
quantile(temp$Ranking, seq(0,1,0.2), na.rm=TRUE)
a <- quantile(temp$Ranking, seq(0,1,0.2), na.rm=TRUE)
a[1]
a[2]
temp[1,'Ranking'] > a[1]
temp1 <- mutate(temp, Rankgroup=cut(temp,a))
temp1 <- mutate(temp, Rankgroup=cut(temp$Ranking,a))
View(temp1)
temp1 <- temp %>%
mutate(Rankgroup=cut(temp$Ranking,a)) %>%
select(CountryCode, Income.Group, Rankgroup, Ranking)
View(temp1)
temp1 %>%
filter(Income.Group == 'Lower middle income') %>%
View
temp1 %>%
filter(Income.Group == 'Lower middle income' & Rankgroup =="(1,38.6]") %>%
View
a
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character((cls_list))
as.character(cls_list)
?sapplu
?sapply
?sapply
cls_list <- sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag-colors)
head(flag_colors)
lapply( flag_colors,sum)
sapply( flag_colors,sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flag_shapes, unique)
unique_vals <- lapply(flag, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length
)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
bye()
rm(list=ls())
swirl()
sapply(flags, unique)
vapply(flags, unique, numerica(1))
vapply(flags, unique, numeric(1))
vapply(flags, unique, numeric(1))
vapply(flags, unique, a
)
vapply(flags, unique, 1)
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
bye()
rm(list=ls())
library(datasets)
data("iris")
?iris
head(iris)
unique(iris$Species)
a <- split(iris, species)
a <- split(iris, Species)
a <- split(iris, Species)
a <- split(iris, iris$Species)
lapply(a$Sepal.length, mean)
rm(a)
sapply(iris$Sepal.Length, iris$Species, mean)
a <- split(iris, iris$Species)
sapply(iris$Sepal.Length, a, mean)
a <- split(iris, iris$Species)
sapply(iris$Sepal.Length, a, mean)
class(a)
a[1]
a <- split(iris$Sepal.Length, iris$Species)
class(a)
a[1]
sapply(a, mean)
Continuing with the 'iris' dataset from the previous Question, what R code returns a vector of the means of the variables 'Sepal.Length', 'Sepal.Width', 'Petal.Length', and 'Petal.Width'?
head(iris)
apply(iris[,1:4],2,mean)
rowMean(riis[,1:4])
rowMean(iris[,1:4])
rowMeans(iris[,1:4])
dim(iris)
data("mtcars")
head(mtcars)
class(mtcars$cyl)
f <- gl(mtcars$cyl)
range(mtcars$cyl)
unique(mtcarts$cyl)
range(mtcars$cyl)
unique(mtcars$cyl)
f <- gl(mtcars$cyl)
cyl_factor <- factor(mtcars$cyl)
cyl_factor
sapply(mtcars, cyl, mean)
sapply(mtcars, mean)
sapply(mtcars$cyl, mean)
sapply(mtcars$mpg, mean)
lapply(mtcar, mean)
lapply(mtcars, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg,mtcars$cyl), mean)
split(mtcars$mpg,mtcars$cyl)
mean(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
head(mtcars)
tapply(mtcars$hp, mtcars$cyl,mean)
a <- tapply(mtcars$hp, mtcars$cyl,mean)
a$c
a$4
a
a[1]
a[2]
a[3]-a[1]
View(mtcars)
swirl
libary(swirl)
library(swirl)
swirl()
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1
]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,1:2]
svd2$d
head(faceData)
dim(faceData)
(svd1$u[,1] %*% svd1$d) %*% svd1$u[,1]
a1 <- (svd1$u[,1] %*% svd1$d) %*% t(svd1$v[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- (svd1$u[,1:2] %*% svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% t(svd1$v[,1:2]) %*% svd1$d[1:2]
a2 <- svd1$u[1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
knitr::opts_chunk$set(echo = TRUE)
temp <- tempfile()
temp2 <-tempfile()
download.file("https://github.com/rdpeng/courses/blob/master/04_ExploratoryAnalysis/CaseStudy/pm25_data.zip", temp)
unzip(temp,list=TRUE)
temp <- tempfile()
temp2 <-tempfile()
download.file("https://github.com/rdpeng/courses/raw/master/04_ExploratoryAnalysis/CaseStudy/pm25_data.zip", temp)
unzip(temp,list=TRUE)
unzip(zipfile=temp, exdir=temp2)
fpath <- file.path(temp2,'pm25_data/RD_501_88101_1999-0.txt',fsep='\\')
fpath
data_99 <- read.table(file.path(fpath,fsep='\\'))
View(data_99)
data_99 <- read.table(file.path(fpath,fsep='\\'), sep="|")
View(data_99)
data_99 <- read.table(file.path(fpath,fsep='\\'), sep="|", header=TRUE)
head(data_99)
data_99 <- read.table(file.path(fpath,fsep='\\'), sep="|", comment.char="#", na.strings="")
head(data_99)
dim(data_99)
cnames <- readLines(fpath, 1)
cnames
cnames <- strsplit(cnames, sep="|", fixed=TRUE)
cnames <- strsplit(cnames, "|", fixed=TRUE)
cnames
names(data_99) <- cnames[[1]]
head(data_99)
names(data_99) <- make.names(cnames[[1]])
head(data_99)
x0 <- data_99$Sample.Value
class(x0)
str(x0)
summary(x0)
mean(is.na(data_99))
mean(is.na(x0))
is.na(x0)
data_12 <- read.table(file.path(fpath,fsep='\\'), sep="|", comment.char="#", na.strings="")
head(data_12)
names(data_12) <- make.names(cnames[[1]])
x1 <- data_12$Sample.Value
summary(x1)
mean(is.na(x1))
summary(x0)  #5-data summary
mean(is.na(x0)) #11% missing value
x1 <- data_12$Sample.Value
summary(x1)
mean(is.na(x1))
unzip(temp,list=TRUE)
unzip(zipfile=temp, exdir=temp2)
list(temp2)
list.file(temp)
list.files(temp)
list.files(temp2)
list.files(file.path(temp2))
list.files(file.path(temp2,fsep='\\'))
list.files(paste(temp2,"\\"))
list.files(paste(temp2,"\\",sep=""))
paste(temp2,"\\",sep="")
paste(temp2,'pm25_data',"\\",sep="")
paste(temp2,'pm25_data',"\\",sep="\\")
paste(temp2,'pm25_data',sep="\\")
list.files(paste(temp2,'pm25_data',sep="\\")
)
fpath <- file.path(temp2,'pm25_data/RD_501_88101_2012-0.txt',fsep='\\')
data_12 <- read.table(file.path(fpath,fsep='\\'), sep="|", comment.char="#", na.strings="")
names(data_12) <- make.names(cnames[[1]])
x1 <- data_12$Sample.Value
summary(x1)
mean(is.na(x1))
summary(x0)  #5-data summary
mean(is.na(x0)) #11% missing value
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
dates <- data_12$Date
dates <- as.Date(as.character(dates), "%Y%m%d")
str(dates)
hist(dates,"month")
negative <- x1 < 0
hist(dates[negative],"month")
site01 <- unique(subset(data_99, State.Code == 36, c(County.Code, Site.ID)))
rm(site01)
site0 <- unique(subset(data_99, State.Code == 36, c(County.Code, Site.ID)))
site1 <- unique(subset(data_12, State.Code == 36, c(County.Code, Site.ID)))
site0 <- paste(site0[,1], site0[,2], sep=".")
site1 <- paste(site1[,1], site1[,2], sep=".")
str(site0)
both <-intersect(site0, site1)
str(both)
data_99$county.site <- with (data_99, paste(County.site,Site.ID, sep="."))
data_99$county.site <- with (data_99, paste(County.Code,Site.ID, sep="."))
data_12$county.site <- with (data_12, paste(County.Code,Site.ID, sep="."))
cnt99 <- subset(data_99, State.Code==36 & county.site %in% both)
cnt12 <- subset(data_12, State.Code==36 & county.site %in% both)
sapply(split(cnt99, cnt99$county.site), nrow)
sapply(split(cnt12, cnt12$county.site), nrow)
names(data_99)
data_99sub <- subset(data_99, County.Code==63 & Site.Id==2008)
data_99sub <- subset(data_99, County.Code==63 & Site.ID==2008)
data_12sub <- subset(data_12, County.Code==63 & Site.ID==2008)
dim(data_99sub)
dim(data_12sub)
dates99 <- as.Date(as.character(data_99sub$Dates), "%Y%m%d")
x1sub <- dates99$Sample.Value
x1sub <- data_99sub$Sample.Value
plot(dates99, x1sub)
dates99 <- as.Date(as.character(data_99sub$Dates), "%Y%m%d")
x0sub <- data_99sub$Sample.Value
str(dates99)
length(dates99)
dates99 <- as.Date(as.character(data_99sub$Date), "%Y%m%d")
length(dates99)
x0sub <- data_99sub$Sample.Value
plot(dates99, x1sub)
dates99 <- as.Date(as.character(data_99sub$Date), "%Y%m%d")
x0sub <- data_99sub$Sample.Value
plot(dates99, x0sub)
dates12 <- as.Date(as.character(data_12sub$Date), "%Y%m%d")
x1sub <- data_12sub$Sample.Value
plot(dates12, x1sub)
par(mfrow=c(1,1), mar=c(4,4,2,1))
plot(dates99, x0sub, pch=20)
abline(h=median(x0sub, na,rm=T))
par(mfrow=c(1,1), mar=c(4,4,2,1))
plot(dates99, x0sub, pch=20)
abline(h=median(x0sub, na.rm=T))
plot(dates12, x0sub, pch=20)
par(mfrow=c(1,1), mar=c(4,4,2,1))
plot(dates99, x0sub, pch=20)
abline(h=median(x0sub, na.rm=T))
plot(dates12, x1sub, pch=20)
abline(h=median(x1sub, na.rm=T))
rng <- range(x0sub, x1sub, na.rm=T)
par(mfrow=c(1,1), mar=c(4,4,2,1))
plot(dates99, x0sub, pch=20, ylim=rng)
abline(h=median(x0sub, na.rm=T))
plot(dates12, x1sub, pch=20)
abline(h=median(x1sub, na.rm=T, ylim=rng))
rng <- range(x0sub, x1sub, na.rm=T)
rn
rng
par(mfrow=c(1,1), mar=c(4,4,2,1))
plot(dates99, x0sub, pch=20, ylim=rng)
abline(h=median(x0sub, na.rm=T))
plot(dates12, x1sub, pch=20)
abline(h=median(x1sub, na.rm=T, ylim=rng))
rng <- range(x0sub, x1sub, na.rm=T)
par(mfrow=c(1,1), mar=c(4,4,2,1))
plot(dates99, x0sub, pch=20, ylim=rng)
abline(h=median(x0sub, na.rm=T))
plot(dates12, x1sub, pch=20)
abline(h=median(x1sub, na.rm=T, ylim=rng))
rng <- range(x0sub, x1sub, na.rm=T)
par(mfrow=c(1,1), mar=c(4,4,2,1))
plot(dates99, x0sub, pch=20, ylim=rng)
abline(h=median(x0sub, na.rm=T))
plot(dates12, x1sub, pch=20, ylim=rng)
abline(h=median(x1sub, na.rm=T))
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates99, x0sub, pch=20, ylim=rng)
abline(h=median(x0sub, na.rm=T))
plot(dates12, x1sub, pch=20, ylim=rng)
abline(h=median(x1sub, na.rm=T))
mean0 <- with(data_99, tapply(Sample.Value, State.Code, mean, na.rm=T))
mean0 <- with(data_99, tapply(Sample.Value, State.Code, mean, na.rm=T))
mean1 <- with(data_12, tapply(Sample.Value, State.Code, mean, na.rm=T))
rm(mean1, mean0)
mn0 <- with(data_99, tapply(Sample.Value, State.Code, mean, na.rm=T))
mn1 <- with(data_12, tapply(Sample.Value, State.Code, mean, na.rm=T))
d0 <- data.frame(state=names(mn0), mean=mn0)
d0 <- data.frame(state=names(mn0), mean=mn0)
d1 <- data.frame(state=names(mn1), mean=mn1)
mrg <- merge(d0,d1, by="state")
head(mrg)
par(mfrow = c(1,1))
with(mrg, plot(rep(1999,52), mrg[,2], xlim=c(1998,2013)))
with(mrg, points(rep(1999,52), mrg[,1]))
with(mrg, points(rep(2012,52), mrg[,3]))
par(mfrow = c(1,1))
with(mrg, plot(rep(1999,52), mrg[,2], xlim=c(1998,2013)))
with(mrg, points(rep(2012,52), mrg[,3]))
segments(rep(1999,52), mrg[,2], rep(2012,52), mrg[,3])
par(mfrow = c(1,1))
with(mrg, plot(rep(1999,52), mrg[,2], xlim=c(1998,2013)))
with(mrg, points(rep(2012,52), mrg[,3]))
# connect the dots
segments(rep(1999,52), mrg[,2], rep(2012,52), mrg[,3])
head(d0)
rng <- range(d0$mean, d1$mean)
rng
rng <- range(d0$mean, d1$mean)
par(mfrow = c(1,1))
with(mrg, plot(rep(1999,52), mrg[,2], xlim=c(1998,2013), ylim=rng))
with(mrg, points(rep(2012,52), mrg[,3]))
# connect the dots
segments(rep(1999,52), mrg[,2], rep(2012,52), mrg[,3])
rm(list=ls())
load("C:/Users/April/Documents/LearnR/Basic R/.RData")
setwd("~/workspace/AL-LearnR-Coursera/Reproducible Research/Week2")
library (dplyr)
library(ggplot2)
library(gridExtra)
library(lubridate)
#list what is in the zip file
unzip("activity.zip", list=TRUE)
#read the activity.csv
input_data <- read.csv(unzip(zipfile="activity.zip"))
rm(list=ls())
#list what is in the zip file
unzip("activity.zip", list=TRUE)
#read the activity.csv
input_data <- read.csv(unzip(zipfile="activity.zip"))
Total_Daily_Steps <- input_data %>%
group_by(date) %>%
summarize(sum_steps = sum(steps, na.rm=TRUE))
mean_daily = round(mean(Total_Daily_Steps$sum_steps),0)
median_daily=round(median(Total_Daily_Steps$sum_steps),0)
#qplot(data=Total_Daily_Steps, x=sum_steps)
ggplot(Total_Daily_Steps,aes(sum_steps)) +
geom_histogram() +
geom_vline(xintercept = mean_daily, color="red") +
geom_text(aes(x=mean_daily, y=10), label='mean', color="red", size=3.5, angle=90, hjust=1, vjust=1) +
geom_vline(xintercept = median_daily, color="blue") +
geom_text(aes(x=median_daily, y=10),label='medium', color="blue",size=3.5,angle=90, hjust=1, vjust=1)
Total_Daily_Steps$date <- ymd(Total_Daily_Steps$date)
interval_mean <- input_data %>%
group_by(interval)%>%
summarize(mean_int_step = mean(steps, na.rm=TRUE))
ggplot(interval_mean, aes(interval, mean_int_step)) + geom_line()
max_step = interval_mean[which.max(interval_mean$mean_int_step),'interval']
unlink('PA1_template_cache', recursive = TRUE)
unlink('PA1_template_cache', recursive = TRUE)
unlink('PA1_template_cache', recursive = TRUE)
knitr::opts_chunk$set(echo = TRUE)
input_data2 <- input_data
sum(is.na(input_data2[i,‘steps’]))
sum(is.na(input_data2[i,steps]))
head(input_data2[,'steps'])
head(input_data2[1,'steps'])
input_data2[1,'steps']
for (i in seq(nrow(input_data2))) {
if (is.na(input_data2[i,"steps"])) {
input_data2steps[i]<-interval_mean$mean_int_step[which(interval_meaninterval==input_data2interval[i])]
}
}
for (i in seq(nrow(input_data2))) {
if (is.na(input_data2[i,"steps"])) {
input_data2steps[i]<-interval_mean$mean_int_step[which(interval_mean$interval==input_data2interval[i])]
}
}
for (i in seq(nrow(input_data2))) {
if (is.na(input_data2[i,"steps"])) {
input_data2$steps[i]<-interval_mean$mean_int_step[which(interval_mean$interval==input_data2$interval[i])]
}
}
Total_Daily_Steps2 <- input_data2 %>%
group_by(date) %>%
summarize(sum_steps = sum(steps, na.rm=TRUE))
mean_daily2 = round(mean(Total_Daily_Steps$sum_steps),0)
median_daily2=round(median(Total_Daily_Steps$sum_steps),0)
#par(mfrow=c(1,2))
p1 <- ggplot(Total_Daily_Steps,aes(sum_steps)) +
geom_histogram() + expand_limits(y=c(0,15)) +
geom_vline(xintercept = mean_daily, color="red") +
geom_text(aes(x=mean_daily, y=15), label='mean', color="red", size=3.5, angle=90, hjust=1, vjust=1) +
geom_vline(xintercept = median_daily, color="blue") +
geom_text(aes(x=median_daily, y=15),label='median', color="blue",size=3.5,angle=90, hjust=1, vjust=1) +
ggtitle('Original Data')
p2 <- ggplot(Total_Daily_Steps2,aes(sum_steps)) +
geom_histogram() + expand_limits(y=c(0,15)) +
geom_vline(xintercept = mean_daily2, color="red") +
geom_text(aes(x=mean_daily2, y=15), label='mean', color="red", size=3.5, angle=90, hjust=1, vjust=1) +
geom_vline(xintercept = median_daily2, color="blue") +
geom_text(aes(x=median_daily2, y=15),label='median', color="blue",size=3.5,angle=90, hjust=1, vjust=1) +
ggtitle('Imputed Data')
grid.arrange(p1, p2, ncol=2)
input_data <- input_data %>%
mutate(day = wday(as.Date(input_data$date, "%Y-%m-%d"))) %>%
mutate(weekdays = day<6)
# split the data by weekdays and weekends, then do a time series
# weekday activity #
weekday = input_data %>%
filter(input_data$weekdays == TRUE)
weekday_interval_mean <- weekday %>%
group_by(interval)%>%
summarize(mean_int_step = mean(steps, na.rm=TRUE))
# weekend activity #
weekend = input_data %>%
filter(input_data$weekdays == FALSE)
weekend_interval_mean <- weekend %>%
group_by(interval)%>%
summarize(mean_int_step = mean(steps, na.rm=TRUE))
p1 <- ggplot(weekday_interval_mean, aes(interval, mean_int_step)) + geom_line() + expand_limits(y=c(0,300)) + ggtitle("Weekday Activity")
p2 <- ggplot(weekend_interval_mean, aes(interval, mean_int_step)) + geom_line() +expand_limits(y=c(0,300)) + ggtitle("Weekend Activity")
grid.arrange(p1, p2, ncol=2)
